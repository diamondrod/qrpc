syntax="proto3";

package ticket;

import "google/protobuf/empty.proto";
import "q.proto";

// Class of seat
enum Class{
  no_preference = 0;
  stand = 1;
  arena = 2;
  vip = 3;
}

// Information to apply to an event.
message Application{
  // Name of a customer.
  string name = 1;
  // Event date.
  q.date date = 4;
  // The number of seats to reserve.
  int32 number = 5;
  // Class of seat.
  Class class = 6;
}

// Information of a reserved ticket, or a information to cancel a flight.
message TicketInfo{
  // Name of a customer.
  string name = 1;
  // Seat ID.
  repeated q.symbol seats = 2;
  // Flight date.
  q.date date = 3;
}

// Failure response to a flight request.
message ReservationFailure{
  string message = 1;
}

// Response to a flight request.
message Processed{
  oneof result{
    // Reservation success.
    TicketInfo ticket = 1;
    // Reservation failure.
    ReservationFailure failure = 2;
  };
}

// Message to notify that cancellation was completed.
message Cancelled{
  string message = 1;
}

// Table of available seats by seat class.
message AvailableSeats{
  map<string, int32> inventory = 1;
}

// Service to issue a ticket.
service TicketingMachine{
  // Customer requests seats and get a result.
  rpc Reserve(Application) returns (Processed);
  // Customer cancels seats.
  rpc Cancel(TicketInfo) returns (Cancelled);
  // Customer requests current status of the inventory.
  rpc GetAvailableSeats(google.protobuf.Empty) returns (AvailableSeats);
}
