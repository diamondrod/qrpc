syntax="proto3";

package example;

import "q.proto";

// Message composed of atom types.
message Atoms{
  bool bool_f = 1;
  int32 int_f = 2;
  int64 long_f = 3;
  float real_f = 4;
  double float_f = 5;
  q.symbol symbol_f = 6;
  q.timestamp timestamp_f = 7;
  q.month month_f = 8;
  q.date date_f = 9;
  q.datetime datetime_f = 10;
  q.timespan timespan_f = 11;
  q.minute minute_f = 12;
  q.second second_f = 13;
  q.time time_f = 14;
}

// Message composed of list types.
message Lists{
  repeated bool bool_f = 1;
  repeated int32 int_f = 2;
  repeated int64 long_f = 3;
  repeated float real_f = 4;
  repeated double float_f = 5;
  repeated q.symbol symbol_f = 6;
  repeated q.timestamp timestamp_f = 7;
  repeated q.month month_f = 8;
  repeated q.date date_f = 9;
  repeated q.datetime datetime_f = 10;
  repeated q.timespan timespan_f = 11;
  repeated q.minute minute_f = 12;
  repeated q.second second_f = 13;
  repeated q.time time_f = 14;
}

// Inner message contained in `Outer`.
message Inner{
  int64 inner_muscle = 1;
  q.symbol inner_mind = 2;
}

// Nested message.
message Outer{
  bool out_law = 1;
  Inner inner = 2;
}

// Table row.
message Row{
  q.symbol host = 1;
  sint32 port = 2;
  q.timespan running = 3;
  string user = 4;
}

// Message containing a table.
message Table{
  repeated Row rows = 1;
}

// Message composed of maps.
message Mappy{
  map<string, int32> id = 1;
  map<int64, q.month> xday = 2; 
  map<bool, Inner> physical = 3;
}

// Message containing oneof field.
message OneOf{
  bool static = 1;
  oneof random{
    int32 int_f = 2;
    string string_f = 3;
    q.month month_f = 4;
    q.symbol symbol_f = 5;
  }
}

// Message representing available fruit.
enum fruit{
  rotten_fruit = 0;
  apple = 1;
  banana = 2;
  citrus = 3;
  dragon_fruit = 4;
}

// Message representing available vegetables.
enum vegetable{
  rotten_vegetable = 0;
  tomato = 1;
  cabage = 2;
  mashroom = 3;
}

// Message holding enum values.
message Basket{
  repeated fruit desserts = 1;
  double price = 2;
  vegetable snack = 3;
}

// Test Messages
message OnlyBool{
  bool bool1 = 1;
  bool bool2 = 2;
}

message OnlyInt{
  int32 int1 = 1;
  sint32 int2 = 2;
}

message OnlyLong{
  sint64 long1 = 1;
  int64 long2 = 2;
}

message OnlyReal{
  float real1 = 1;
  float real2 = 2;
}

message OnlyFloat{
  double float1 = 1;
  double float2 = 2;
}

message OnlySymbol{
  q.symbol symbol1 = 1;
  q.symbol symbol2 = 2;
}

message OnlyTimestamp{
  q.timestamp timestamp1 = 1;
  q.timestamp timestamp2 = 2; 
}

message OnlyMonth{
  q.month month1 = 1;
  q.month month2 = 2;
}

message OnlyDate{
  q.date date1 = 1;
  q.date date2 = 2;
}

message OnlyDatetime{
  q.datetime datetime1 = 1;
  q.datetime datetime2 = 2;
}

message OnlyTimespan{
  q.timespan timespan1 = 1;
  q.timespan timespan2 = 2;
}

message OnlyMinute{
  q.minute minute1 = 1;
  q.minute minute2 = 2;
}

message OnlySecond{
  q.second second1 = 1;
  q.second second2 = 2;
}

message OnlyTime{
  q.time time1 = 1;
  q.time time2 = 2;
}
